from qgis.PyQt import QtGui
from qgis.PyQt.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, 
                                QPushButton, QLabel, QGraphicsView, 
                                QGraphicsScene, QWidget)
from qgis.PyQt.QtCore import Qt, QSize
from qgis.PyQt.QtSvg import QGraphicsSvgItem, QSvgWidget
import os
from ..logger.logger import Logger

class ZoomableGraphicsView(QGraphicsView):
    def __init__(self, parent=None):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç ZoomableGraphicsView —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è."""
        super().__init__(parent)
        self.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.SmoothPixmapTransform)
        self.setDragMode(QGraphicsView.ScrollHandDrag)
        self.setTransformationAnchor(QGraphicsView.AnchorUnderMouse)
        self.setResizeAnchor(QGraphicsView.AnchorUnderMouse)
        self.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.zoom_factor = 1.15

    def wheelEvent(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–æ–ª–µ—Å–∏–∫–∞ –º—ã—à–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–∂–∞—Ç–æ–º Ctrl."""
        if event.modifiers() == Qt.ControlModifier:
            if event.angleDelta().y() > 0:
                factor = self.zoom_factor
            else:
                factor = 1 / self.zoom_factor
            self.scale(factor, factor)
        else:
            super().wheelEvent(event)

    def mouseDoubleClickEvent(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤–∏–¥–∞."""
        if event.button() == Qt.LeftButton:
            self.resetView()

    def resetView(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∞ –∏ –ø–æ–¥–≥–æ–Ω—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é –æ–±–ª–∞—Å—Ç—å."""
        self.setTransform(QtGui.QTransform())
        self.fitInView(self.scene().sceneRect(), Qt.KeepAspectRatio)

class PreviewDialog(QDialog):
    def __init__(self, svg_path, parent=None):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∏–∞–ª–æ–≥ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º SVG —Ñ–∞–π–ª–æ–º."""
        super().__init__(parent)
        self.setWindowTitle("DXF Preview")
        self.resize(800, 600)
        self.setup_ui(svg_path)

    def setup_ui(self, svg_path):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞."""
        layout = QVBoxLayout(self)
        
        toolbar = QHBoxLayout()
        instructions = self.create_instructions()
        toolbar.addWidget(self.create_control_buttons())
        toolbar.addStretch()
        toolbar.addWidget(instructions)
        
        self.setup_svg_view(svg_path)
        
        layout.addLayout(toolbar)
        layout.addWidget(self.view)
        
        self.reset_view()

    def create_instructions(self):
        """–°–æ–∑–¥–∞–µ—Ç –º–µ—Ç–∫—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º."""
        instructions = QLabel(
            "üñ±Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n"
            "‚Ä¢ Ctrl + –∫–æ–ª–µ—Å–æ –º—ã—à–∏ - –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
            "‚Ä¢ –ó–∞–∂–∞—Ç—å –õ–ö–ú - –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ\n"
            "‚Ä¢ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ - —Å–±—Ä–æ—Å –≤–∏–¥–∞\n"
            "‚Ä¢ Ctrl + (+/-) - –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
            "‚Ä¢ Ctrl + 0 - —Å–±—Ä–æ—Å –≤–∏–¥–∞\n"
            "‚Ä¢ Esc - –∑–∞–∫—Ä—ã—Ç—å"
        )
        instructions.setStyleSheet("color: #666; font-size: 10px;")
        return instructions

    def create_control_buttons(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º."""
        container = QWidget()
        layout = QHBoxLayout(container)
        
        buttons = [
            ("‚ü≤", "–°–±—Ä–æ—Å–∏—Ç—å –≤–∏–¥", lambda: self.reset_view()),
            ("‚ûï", "–ü—Ä–∏–±–ª–∏–∑–∏—Ç—å", lambda: self.zoom(1.2)),
            ("‚ûñ", "–û—Ç–¥–∞–ª–∏—Ç—å", lambda: self.zoom(0.8))
        ]
        
        for text, tooltip, callback in buttons:
            btn = QPushButton(text)
            btn.setToolTip(tooltip)
            btn.clicked.connect(callback)
            btn.setFixedSize(30, 30)
            btn.setStyleSheet("""
                QPushButton {
                    font-size: 16px;
                    border: 1px solid #ccc;
                    border-radius: 15px;
                    background-color: #f8f9fa;
                }
                QPushButton:hover {
                    background-color: #e9ecef;
                }
            """)
            layout.addWidget(btn)
        
        layout.setContentsMargins(0, 0, 0, 0)
        return container

    def setup_svg_view(self, svg_path):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é —Å—Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è SVG."""
        self.scene = QGraphicsScene()
        self.view = ZoomableGraphicsView()
        self.view.setScene(self.scene)
        
        self.svg_item = QGraphicsSvgItem(svg_path)
        self.scene.addItem(self.svg_item)
        self.scene.setSceneRect(self.svg_item.boundingRect())

    def reset_view(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤–∏–¥ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞."""
        self.view.resetView()

    def zoom(self, factor):
        """–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç –≤–∏–¥ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º."""
        self.view.scale(factor, factor)

    def keyPressEvent(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à: Escape –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥, Ctrl+(+/-/0) –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç –∏–ª–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤–∏–¥."""
        if event.key() == Qt.Key_Escape:
            self.close()
        elif event.modifiers() == Qt.ControlModifier:
            if event.key() in (Qt.Key_Plus, Qt.Key_Equal):
                self.zoom(1.2)
            elif event.key() == Qt.Key_Minus:
                self.zoom(0.8)
            elif event.key() == Qt.Key_0:
                self.reset_view()
        else:
            super().keyPressEvent(event)

class PreviewWidgetFactory:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∞–±—Ä–∏–∫—É –≤–∏–¥–∂–µ—Ç–æ–≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤."""
        self.preview_cache = {}

    def clear_cache(self):
        """–û—á–∏—â–∞–µ—Ç –∫–µ—à –≤–∏–¥–∂–µ—Ç–æ–≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞."""
        for widget in self.preview_cache.values():
            if widget and not widget.isDestroyed():
                widget.deleteLater()
        self.preview_cache.clear()

    def remove_from_cache(self, preview_path):
        """–£–¥–∞–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–∏–¥–∂–µ—Ç –∏–∑ –∫–µ—à–∞."""
        if preview_path in self.preview_cache:
            widget = self.preview_cache.pop(preview_path)
            if widget and not widget.isDestroyed():
                widget.deleteLater()

    def create_preview_widget(self, file_name, plugin_root_dir, on_preview_click):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞."""
        preview_dir = os.path.join(plugin_root_dir, 'previews')
        preview_path = os.path.join(preview_dir, f"{os.path.splitext(file_name)[0]}.svg")
        
        Logger.log_message(f"–ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ –ø—É—Ç–∏: {preview_path}")
        
        if not os.path.exists(preview_path):
            Logger.log_warning(f"–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {preview_path}")
            return None

        # –ï—Å–ª–∏ –≤–∏–¥–∂–µ—Ç —É–∂–µ –µ—Å—Ç—å –≤ –∫–µ—à–µ –∏ –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if preview_path in self.preview_cache:
            cached_widget = self.preview_cache[preview_path]
            if cached_widget and not cached_widget.isDestroyed():
                return cached_widget
            else:
                # –ï—Å–ª–∏ –≤–∏–¥–∂–µ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω, —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ –∫–µ—à–∞
                self.remove_from_cache(preview_path)

        try:
            container = QWidget()
            layout = QHBoxLayout(container)
            
            preview = QSvgWidget(preview_path)
            preview.setFixedSize(QSize(80, 80))
            
            expand_btn = QPushButton("üîç")
            expand_btn.setFixedSize(20, 20)
            expand_btn.clicked.connect(lambda: on_preview_click(preview_path))
            
            layout.addWidget(preview)
            layout.addWidget(expand_btn)
            layout.setContentsMargins(5, 5, 5, 5)
            layout.setSpacing(2)
            container.setLayout(layout)
            
            self.preview_cache[preview_path] = container
            return container
        except Exception as e:
            Logger.log_error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {str(e)}")
            return None
